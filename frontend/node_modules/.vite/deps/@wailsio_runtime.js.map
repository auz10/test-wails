{
  "version": 3,
  "sources": ["../../@wailsio/runtime/src/application.js", "../../nanoid/non-secure/index.js", "../../@wailsio/runtime/src/runtime.js", "../../@wailsio/runtime/src/browser.js", "../../@wailsio/runtime/src/clipboard.js", "../../@wailsio/runtime/src/system.js", "../../@wailsio/runtime/src/contextmenu.js", "../../@wailsio/runtime/src/flags.js", "../../@wailsio/runtime/src/screens.js", "../../@wailsio/runtime/src/window.js", "../../@wailsio/runtime/src/wml.js", "../../@wailsio/runtime/src/events.js", "../../@wailsio/runtime/src/event_types.js", "../../@wailsio/runtime/src/dialogs.js", "../../@wailsio/runtime/src/calls.js", "../../@wailsio/runtime/src/drag.js", "../../@wailsio/runtime/src/index.js"],
  "sourcesContent": ["/*\r\n _\t   __\t  _ __\r\n| |\t / /___ _(_) /____\r\n| | /| / / __ `/ / / ___/\r\n| |/ |/ / /_/ / / (__  )\r\n|__/|__/\\__,_/_/_/____/\r\nThe electron alternative for Go\r\n(c) Lea Anthony 2019-present\r\n*/\r\n\r\n/* jshint esversion: 9 */\r\n\r\nimport { newRuntimeCallerWithID, objectNames } from \"./runtime\";\r\nconst call = newRuntimeCallerWithID(objectNames.Application, '');\r\n\r\nconst HideMethod = 0;\r\nconst ShowMethod = 1;\r\nconst QuitMethod = 2;\r\n\r\n/**\r\n * Hides a certain method by calling the HideMethod function.\r\n *\r\n * @return {Promise<void>}\r\n *\r\n */\r\nexport function Hide() {\r\n    return call(HideMethod);\r\n}\r\n\r\n/**\r\n * Calls the ShowMethod and returns the result.\r\n *\r\n * @return {Promise<void>}\r\n */\r\nexport function Show() {\r\n    return call(ShowMethod);\r\n}\r\n\r\n/**\r\n * Calls the QuitMethod to terminate the program.\r\n *\r\n * @return {Promise<void>}\r\n */\r\nexport function Quit() {\r\n    return call(QuitMethod);\r\n}\r\n", "let urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\nlet customAlphabet = (alphabet, defaultSize = 21) => {\n  return (size = defaultSize) => {\n    let id = ''\n    let i = size\n    while (i--) {\n      id += alphabet[(Math.random() * alphabet.length) | 0]\n    }\n    return id\n  }\n}\nlet nanoid = (size = 21) => {\n  let id = ''\n  let i = size\n  while (i--) {\n    id += urlAlphabet[(Math.random() * 64) | 0]\n  }\n  return id\n}\nexport { nanoid, customAlphabet }\n", "/*\r\n _     __     _ __\r\n| |  / /___ _(_) /____\r\n| | /| / / __ `/ / / ___/\r\n| |/ |/ / /_/ / / (__  )\r\n|__/|__/\\__,_/_/_/____/\r\nThe electron alternative for Go\r\n(c) Lea Anthony 2019-present\r\n*/\r\n\r\n/* jshint esversion: 9 */\r\nimport { nanoid } from 'nanoid/non-secure';\r\n\r\nconst runtimeURL = window.location.origin + \"/wails/runtime\";\r\n\r\n// Object Names\r\nexport const objectNames = {\r\n    Call: 0,\r\n    Clipboard: 1,\r\n    Application: 2,\r\n    Events: 3,\r\n    ContextMenu: 4,\r\n    Dialog: 5,\r\n    Window: 6,\r\n    Screens: 7,\r\n    System: 8,\r\n    Browser: 9,\r\n}\r\nexport let clientId = nanoid();\r\n\r\n/**\r\n * Creates a runtime caller function that invokes a specified method on a given object within a specified window context.\r\n *\r\n * @param {Object} object - The object on which the method is to be invoked.\r\n * @param {string} windowName - The name of the window context in which the method should be called.\r\n * @returns {Function} A runtime caller function that takes the method name and optionally arguments and invokes the method within the specified window context.\r\n */\r\nexport function newRuntimeCaller(object, windowName) {\r\n    return function (method, args=null) {\r\n        return runtimeCall(object + \".\" + method, windowName, args);\r\n    };\r\n}\r\n\r\n/**\r\n * Creates a new runtime caller with specified ID.\r\n *\r\n * @param {object} object - The object to invoke the method on.\r\n * @param {string} windowName - The name of the window.\r\n * @return {Function} - The new runtime caller function.\r\n */\r\nexport function newRuntimeCallerWithID(object, windowName) {\r\n    return function (method, args=null) {\r\n        return runtimeCallWithID(object, method, windowName, args);\r\n    };\r\n}\r\n\r\n\r\nfunction runtimeCall(method, windowName, args) {\r\n    let url = new URL(runtimeURL);\r\n    if( method ) {\r\n        url.searchParams.append(\"method\", method);\r\n    }\r\n    let fetchOptions = {\r\n        headers: {},\r\n    };\r\n    if (windowName) {\r\n        fetchOptions.headers[\"x-wails-window-name\"] = windowName;\r\n    }\r\n    if (args) {\r\n        url.searchParams.append(\"args\", JSON.stringify(args));\r\n    }\r\n    fetchOptions.headers[\"x-wails-client-id\"] = clientId;\r\n\r\n    return new Promise((resolve, reject) => {\r\n        fetch(url, fetchOptions)\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    // check content type\r\n                    if (response.headers.get(\"Content-Type\") && response.headers.get(\"Content-Type\").indexOf(\"application/json\") !== -1) {\r\n                        return response.json();\r\n                    } else {\r\n                        return response.text();\r\n                    }\r\n                }\r\n                reject(Error(response.statusText));\r\n            })\r\n            .then(data => resolve(data))\r\n            .catch(error => reject(error));\r\n    });\r\n}\r\n\r\nfunction runtimeCallWithID(objectID, method, windowName, args) {\r\n    let url = new URL(runtimeURL);\r\n    url.searchParams.append(\"object\", objectID);\r\n    url.searchParams.append(\"method\", method);\r\n    let fetchOptions = {\r\n        headers: {},\r\n    };\r\n    if (windowName) {\r\n        fetchOptions.headers[\"x-wails-window-name\"] = windowName;\r\n    }\r\n    if (args) {\r\n        url.searchParams.append(\"args\", JSON.stringify(args));\r\n    }\r\n    fetchOptions.headers[\"x-wails-client-id\"] = clientId;\r\n    return new Promise((resolve, reject) => {\r\n        fetch(url, fetchOptions)\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    // check content type\r\n                    if (response.headers.get(\"Content-Type\") && response.headers.get(\"Content-Type\").indexOf(\"application/json\") !== -1) {\r\n                        return response.json();\r\n                    } else {\r\n                        return response.text();\r\n                    }\r\n                }\r\n                reject(Error(response.statusText));\r\n            })\r\n            .then(data => resolve(data))\r\n            .catch(error => reject(error));\r\n    });\r\n}\r\n", "/*\r\n _\t   __\t  _ __\r\n| |\t / /___ _(_) /____\r\n| | /| / / __ `/ / / ___/\r\n| |/ |/ / /_/ / / (__  )\r\n|__/|__/\\__,_/_/_/____/\r\nThe electron alternative for Go\r\n(c) Lea Anthony 2019-present\r\n*/\r\n\r\n/* jshint esversion: 9 */\r\nimport {newRuntimeCallerWithID, objectNames} from \"./runtime\";\r\n\r\nconst call = newRuntimeCallerWithID(objectNames.Browser, '');\r\nconst BrowserOpenURL = 0;\r\n\r\n/**\r\n * Open a browser window to the given URL\r\n * @param {string} url - The URL to open\r\n * @returns {Promise<string>}\r\n */\r\nexport function OpenURL(url) {\r\n    return call(BrowserOpenURL, {url});\r\n}\r\n", "/*\r\n _\t   __\t  _ __\r\n| |\t / /___ _(_) /____\r\n| | /| / / __ `/ / / ___/\r\n| |/ |/ / /_/ / / (__  )\r\n|__/|__/\\__,_/_/_/____/\r\nThe electron alternative for Go\r\n(c) Lea Anthony 2019-present\r\n*/\r\n\r\n/* jshint esversion: 9 */\r\n\r\nimport {newRuntimeCallerWithID, objectNames} from \"./runtime\";\r\n\r\nconst call = newRuntimeCallerWithID(objectNames.Clipboard, '');\r\nconst ClipboardSetText = 0;\r\nconst ClipboardText = 1;\r\n\r\n/**\r\n * Sets the text to the Clipboard.\r\n *\r\n * @param {string} text - The text to be set to the Clipboard.\r\n * @return {Promise} - A Promise that resolves when the operation is successful.\r\n */\r\nexport function SetText(text) {\r\n    return call(ClipboardSetText, {text});\r\n}\r\n\r\n/**\r\n * Get the Clipboard text\r\n * @returns {Promise<string>} A promise that resolves with the text from the Clipboard.\r\n */\r\nexport function Text() {\r\n    return call(ClipboardText);\r\n}\r\n", "/*\r\n _\t   __\t  _ __\r\n| |\t / /___ _(_) /____\r\n| | /| / / __ `/ / / ___/\r\n| |/ |/ / /_/ / / (__  )\r\n|__/|__/\\__,_/_/_/____/\r\nThe electron alternative for Go\r\n(c) Lea Anthony 2019-present\r\n*/\r\n\r\n/* jshint esversion: 9 */\r\n\r\nimport {newRuntimeCallerWithID, objectNames} from \"./runtime\";\r\nlet call = newRuntimeCallerWithID(objectNames.System, '');\r\nconst systemIsDarkMode = 0;\r\nconst environment = 1;\r\n\r\nexport function invoke(msg) {\r\n    if(window.chrome) {\r\n        return window.chrome.webview.postMessage(msg);\r\n    }\r\n    return window.webkit.messageHandlers.external.postMessage(msg);\r\n}\r\n\r\n/**\r\n * @function\r\n * Retrieves the system dark mode status.\r\n * @returns {Promise<boolean>} - A promise that resolves to a boolean value indicating if the system is in dark mode.\r\n */\r\nexport function IsDarkMode() {\r\n    return call(systemIsDarkMode);\r\n}\r\n\r\n/**\r\n * Fetches the capabilities of the application from the server.\r\n *\r\n * @async\r\n * @function Capabilities\r\n * @returns {Promise<Object>} A promise that resolves to an object containing the capabilities.\r\n */\r\nexport function Capabilities() {\r\n    let response = fetch(\"/wails/capabilities\");\r\n    return response.json();\r\n}\r\n\r\n/**\r\n * @typedef {object} EnvironmentInfo\r\n * @property {string} OS - The operating system in use.\r\n * @property {string} Arch - The architecture of the system.\r\n */\r\n\r\n/**\r\n * @function\r\n * Retrieves environment details.\r\n * @returns {Promise<EnvironmentInfo>} - A promise that resolves to an object containing OS and system architecture.\r\n */\r\nexport function Environment() {\r\n    return call(environment);\r\n}\r\n\r\n/**\r\n * Checks if the current operating system is Windows.\r\n *\r\n * @return {boolean} True if the operating system is Windows, otherwise false.\r\n */\r\nexport function IsWindows() {\r\n    return window._wails.environment.OS === \"windows\";\r\n}\r\n\r\n/**\r\n * Checks if the current operating system is Linux.\r\n *\r\n * @returns {boolean} Returns true if the current operating system is Linux, false otherwise.\r\n */\r\nexport function IsLinux() {\r\n    return window._wails.environment.OS === \"linux\";\r\n}\r\n\r\n/**\r\n * Checks if the current environment is a macOS operating system.\r\n *\r\n * @returns {boolean} True if the environment is macOS, false otherwise.\r\n */\r\nexport function IsMac() {\r\n    return window._wails.environment.OS === \"darwin\";\r\n}\r\n\r\n/**\r\n * Checks if the current environment architecture is AMD64.\r\n * @returns {boolean} True if the current environment architecture is AMD64, false otherwise.\r\n */\r\nexport function IsAMD64() {\r\n    return window._wails.environment.Arch === \"amd64\";\r\n}\r\n\r\n/**\r\n * Checks if the current architecture is ARM.\r\n *\r\n * @returns {boolean} True if the current architecture is ARM, false otherwise.\r\n */\r\nexport function IsARM() {\r\n    return window._wails.environment.Arch === \"arm\";\r\n}\r\n\r\n/**\r\n * Checks if the current environment is ARM64 architecture.\r\n *\r\n * @returns {boolean} - Returns true if the environment is ARM64 architecture, otherwise returns false.\r\n */\r\nexport function IsARM64() {\r\n    return window._wails.environment.Arch === \"arm64\";\r\n}\r\n\r\nexport function IsDebug() {\r\n    return window._wails.environment.Debug === true;\r\n}\r\n\r\n", "/*\r\n _\t   __\t  _ __\r\n| |\t / /___ _(_) /____\r\n| | /| / / __ `/ / / ___/\r\n| |/ |/ / /_/ / / (__  )\r\n|__/|__/\\__,_/_/_/____/\r\nThe electron alternative for Go\r\n(c) Lea Anthony 2019-present\r\n*/\r\n\r\n/* jshint esversion: 9 */\r\n\r\nimport {newRuntimeCallerWithID, objectNames} from \"./runtime\";\r\nimport {IsDebug} from \"./system\";\r\n\r\n// setup\r\nwindow.addEventListener('contextmenu', contextMenuHandler);\r\n\r\nconst call = newRuntimeCallerWithID(objectNames.ContextMenu, '');\r\nconst ContextMenuOpen = 0;\r\n\r\nfunction openContextMenu(id, x, y, data) {\r\n    void call(ContextMenuOpen, {id, x, y, data});\r\n}\r\n\r\nfunction contextMenuHandler(event) {\r\n    // Check for custom context menu\r\n    let element = event.target;\r\n    let customContextMenu = window.getComputedStyle(element).getPropertyValue(\"--custom-contextmenu\");\r\n    customContextMenu = customContextMenu ? customContextMenu.trim() : \"\";\r\n    if (customContextMenu) {\r\n        event.preventDefault();\r\n        let customContextMenuData = window.getComputedStyle(element).getPropertyValue(\"--custom-contextmenu-data\");\r\n        openContextMenu(customContextMenu, event.clientX, event.clientY, customContextMenuData);\r\n        return\r\n    }\r\n\r\n    processDefaultContextMenu(event);\r\n}\r\n\r\n\r\n/*\r\n--default-contextmenu: auto; (default) will show the default context menu if contentEditable is true OR text has been selected OR element is input or textarea\r\n--default-contextmenu: show; will always show the default context menu\r\n--default-contextmenu: hide; will always hide the default context menu\r\n\r\nThis rule is inherited like normal CSS rules, so nesting works as expected\r\n*/\r\nfunction processDefaultContextMenu(event) {\r\n\r\n    // Debug builds always show the menu\r\n    if (IsDebug()) {\r\n        return;\r\n    }\r\n\r\n    // Process default context menu\r\n    const element = event.target;\r\n    const computedStyle = window.getComputedStyle(element);\r\n    const defaultContextMenuAction = computedStyle.getPropertyValue(\"--default-contextmenu\").trim();\r\n    switch (defaultContextMenuAction) {\r\n        case \"show\":\r\n            return;\r\n        case \"hide\":\r\n            event.preventDefault();\r\n            return;\r\n        default:\r\n            // Check if contentEditable is true\r\n            if (element.isContentEditable) {\r\n                return;\r\n            }\r\n\r\n            // Check if text has been selected\r\n            const selection = window.getSelection();\r\n            const hasSelection = (selection.toString().length > 0)\r\n            if (hasSelection) {\r\n                for (let i = 0; i < selection.rangeCount; i++) {\r\n                    const range = selection.getRangeAt(i);\r\n                    const rects = range.getClientRects();\r\n                    for (let j = 0; j < rects.length; j++) {\r\n                        const rect = rects[j];\r\n                        if (document.elementFromPoint(rect.left, rect.top) === element) {\r\n                            return;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // Check if tagname is input or textarea\r\n            if (element.tagName === \"INPUT\" || element.tagName === \"TEXTAREA\") {\r\n                if (hasSelection || (!element.readOnly && !element.disabled)) {\r\n                    return;\r\n                }\r\n            }\r\n\r\n            // hide default context menu\r\n            event.preventDefault();\r\n    }\r\n}\r\n", "/*\r\n _\t   __\t  _ __\r\n| |\t / /___ _(_) /____\r\n| | /| / / __ `/ / / ___/\r\n| |/ |/ / /_/ / / (__  )\r\n|__/|__/\\__,_/_/_/____/\r\nThe electron alternative for Go\r\n(c) Lea Anthony 2019-present\r\n*/\r\n\r\n/* jshint esversion: 9 */\r\n\r\n/**\r\n * Retrieves the value associated with the specified key from the flag map.\r\n *\r\n * @param {string} keyString - The key to retrieve the value for.\r\n * @return {*} - The value associated with the specified key.\r\n */\r\nexport function GetFlag(keyString) {\r\n    try {\r\n        return window._wails.flags[keyString];\r\n    } catch (e) {\r\n        throw new Error(\"Unable to retrieve flag '\" + keyString + \"': \" + e);\r\n    }\r\n}\r\n", "/*\r\n _\t   __\t  _ __\r\n| |\t / /___ _(_) /____\r\n| | /| / / __ `/ / / ___/\r\n| |/ |/ / /_/ / / (__  )\r\n|__/|__/\\__,_/_/_/____/\r\nThe electron alternative for Go\r\n(c) Lea Anthony 2019-present\r\n*/\r\n\r\n/* jshint esversion: 9 */\r\n\r\n/**\r\n * @typedef {Object} Position\r\n * @property {number} X - The X coordinate.\r\n * @property {number} Y - The Y coordinate.\r\n */\r\n\r\n/**\r\n * @typedef {Object} Size\r\n * @property {number} X - The width.\r\n * @property {number} Y - The height.\r\n */\r\n\r\n\r\n/**\r\n * @typedef {Object} Rect\r\n * @property {number} X - The X coordinate of the top-left corner.\r\n * @property {number} Y - The Y coordinate of the top-left corner.\r\n * @property {number} Width - The width of the rectangle.\r\n * @property {number} Height - The height of the rectangle.\r\n */\r\n\r\n\r\n/**\r\n * @typedef {('Zero'|'Ninety'|'OneEighty'|'TwoSeventy')} Rotation\r\n * The rotation of the screen. Can be one of 'Zero', 'Ninety', 'OneEighty', 'TwoSeventy'.\r\n */\r\n\r\n\r\n/**\r\n * @typedef {Object} Screen\r\n * @property {string} Id - Unique identifier for the screen.\r\n * @property {string} Name - Human readable name of the screen.\r\n * @property {number} Scale - The resolution scale of the screen. 1 = standard resolution, 2 = high (Retina), etc.\r\n * @property {Position} Position - Contains the X and Y coordinates of the screen's position.\r\n * @property {Size} Size - Contains the width and height of the screen.\r\n * @property {Rect} Bounds - Contains the bounds of the screen in terms of X, Y, Width, and Height.\r\n * @property {Rect} WorkArea - Contains the area of the screen that is actually usable (excluding taskbar and other system UI).\r\n * @property {boolean} IsPrimary - True if this is the primary monitor selected by the user in the operating system.\r\n * @property {Rotation} Rotation - The rotation of the screen.\r\n */\r\n\r\n\r\nimport {newRuntimeCallerWithID, objectNames} from \"./runtime\";\r\nconst call = newRuntimeCallerWithID(objectNames.Screens, '');\r\n\r\nconst getAll = 0;\r\nconst getPrimary = 1;\r\nconst getCurrent = 2;\r\n\r\n/**\r\n * Gets all screens.\r\n * @returns {Promise<Screen[]>} A promise that resolves to an array of Screen objects.\r\n */\r\nexport function GetAll() {\r\n    return call(getAll);\r\n}\r\n/**\r\n * Gets the primary screen.\r\n * @returns {Promise<Screen>} A promise that resolves to the primary screen.\r\n */\r\nexport function GetPrimary() {\r\n    return call(getPrimary);\r\n}\r\n/**\r\n * Gets the current active screen.\r\n *\r\n * @returns {Promise<Screen>} A promise that resolves with the current active screen.\r\n */\r\nexport function GetCurrent() {\r\n    return call(getCurrent);\r\n}", "/*\r\n _\t   __\t  _ __\r\n| |\t / /___ _(_) /____\r\n| | /| / / __ `/ / / ___/\r\n| |/ |/ / /_/ / / (__  )\r\n|__/|__/\\__,_/_/_/____/\r\nThe electron alternative for Go\r\n(c) Lea Anthony 2019-present\r\n*/\r\n\r\n/* jshint esversion: 9 */\r\n\r\n// Import screen jsdoc definition from ./screens.js\r\n/**\r\n * @typedef {import(\"./screens\").Screen} Screen\r\n */\r\n\r\nimport {newRuntimeCallerWithID, objectNames} from \"./runtime\";\r\n\r\nconst center = 0;\r\nconst setTitle = 1;\r\nconst fullscreen = 2;\r\nconst unFullscreen = 3;\r\nconst setSize = 4;\r\nconst size = 5;\r\nconst setMaxSize = 6;\r\nconst setMinSize = 7;\r\nconst setAlwaysOnTop = 8;\r\nconst setRelativePosition = 9;\r\nconst relativePosition = 10;\r\nconst screen = 11;\r\nconst hide = 12;\r\nconst maximise = 13;\r\nconst unMaximise = 14;\r\nconst toggleMaximise = 15;\r\nconst minimise = 16;\r\nconst unMinimise = 17;\r\nconst restore = 18;\r\nconst show = 19;\r\nconst close = 20;\r\nconst setBackgroundColour = 21;\r\nconst setResizable = 22;\r\nconst width = 23;\r\nconst height = 24;\r\nconst zoomIn = 25;\r\nconst zoomOut = 26;\r\nconst zoomReset = 27;\r\nconst getZoomLevel = 28;\r\nconst setZoomLevel = 29;\r\n\r\nconst thisWindow = Get('');\r\n\r\nfunction createWindow(call) {\r\n    return {\r\n        Get: (windowName) => createWindow(newRuntimeCallerWithID(objectNames.Window, windowName)),\r\n        Center: () => call(center),\r\n        SetTitle: (title) => call(setTitle, {title}),\r\n        Fullscreen: () => call(fullscreen),\r\n        UnFullscreen: () => call(unFullscreen),\r\n        SetSize: (width, height) => call(setSize, {width, height}),\r\n        Size: () => call(size),\r\n        SetMaxSize: (width, height) => call(setMaxSize, {width, height}),\r\n        SetMinSize: (width, height) => call(setMinSize, {width, height}),\r\n        SetAlwaysOnTop: (onTop) => call(setAlwaysOnTop, {alwaysOnTop: onTop}),\r\n        SetRelativePosition: (x, y) => call(setRelativePosition, {x, y}),\r\n        RelativePosition: () => call(relativePosition),\r\n        Screen: () => call(screen),\r\n        Hide: () => call(hide),\r\n        Maximise: () => call(maximise),\r\n        UnMaximise: () => call(unMaximise),\r\n        ToggleMaximise: () => call(toggleMaximise),\r\n        Minimise: () => call(minimise),\r\n        UnMinimise: () => call(unMinimise),\r\n        Restore: () => call(restore),\r\n        Show: () => call(show),\r\n        Close: () => call(close),\r\n        SetBackgroundColour: (r, g, b, a) => call(setBackgroundColour, {r, g, b, a}),\r\n        SetResizable: (resizable) => call(setResizable, {resizable}),\r\n        Width: () => call(width),\r\n        Height: () => call(height),\r\n        ZoomIn: () => call(zoomIn),\r\n        ZoomOut: () => call(zoomOut),\r\n        ZoomReset: () => call(zoomReset),\r\n        GetZoomLevel: () => call(getZoomLevel),\r\n        SetZoomLevel: (zoomLevel) => call(setZoomLevel, {zoomLevel}),\r\n    };\r\n}\r\n\r\n/**\r\n * Gets the specified window.\r\n *\r\n * @param {string} windowName - The name of the window to get.\r\n * @return {Object} - The specified window object.\r\n */\r\nexport function Get(windowName) {\r\n    return createWindow(newRuntimeCallerWithID(objectNames.Window, windowName));\r\n}\r\n\r\n/**\r\n * Centers the window on the screen.\r\n */\r\nexport function Center() {\r\n    thisWindow.Center();\r\n}\r\n\r\n/**\r\n * Sets the title of the window.\r\n * @param {string} title - The title to set.\r\n */\r\nexport function SetTitle(title) {\r\n    thisWindow.SetTitle(title);\r\n}\r\n\r\n/**\r\n * Sets the window to fullscreen.\r\n */\r\nexport function Fullscreen() {\r\n    thisWindow.Fullscreen();\r\n}\r\n\r\n/**\r\n * Sets the size of the window.\r\n * @param {number} width - The width of the window.\r\n * @param {number} height - The height of the window.\r\n */\r\nexport function SetSize(width, height) {\r\n    thisWindow.SetSize(width, height);\r\n}\r\n\r\n/**\r\n * Gets the size of the window.\r\n */\r\nexport function Size() {\r\n    return thisWindow.Size();\r\n}\r\n\r\n/**\r\n * Sets the maximum size of the window.\r\n * @param {number} width - The maximum width of the window.\r\n * @param {number} height - The maximum height of the window.\r\n */\r\nexport function SetMaxSize(width, height) {\r\n    thisWindow.SetMaxSize(width, height);\r\n}\r\n\r\n/**\r\n * Sets the minimum size of the window.\r\n * @param {number} width - The minimum width of the window.\r\n * @param {number} height - The minimum height of the window.\r\n */\r\nexport function SetMinSize(width, height) {\r\n    thisWindow.SetMinSize(width, height);\r\n}\r\n\r\n/**\r\n * Sets the window to always be on top.\r\n * @param {boolean} onTop - Whether the window should always be on top.\r\n */\r\nexport function SetAlwaysOnTop(onTop) {\r\n    thisWindow.SetAlwaysOnTop(onTop);\r\n}\r\n\r\n/**\r\n * Sets the relative position of the window.\r\n * @param {number} x - The x-coordinate of the window's position.\r\n * @param {number} y - The y-coordinate of the window's position.\r\n */\r\nexport function SetRelativePosition(x, y) {\r\n    thisWindow.SetRelativePosition(x, y);\r\n}\r\n\r\n/**\r\n * Gets the relative position of the window.\r\n */\r\nexport function RelativePosition() {\r\n    return thisWindow.RelativePosition();\r\n}\r\n\r\n/**\r\n * Gets the screen that the window is on.\r\n */\r\nexport function Screen() {\r\n    return thisWindow.Screen();\r\n}\r\n\r\n/**\r\n * Hides the window.\r\n */\r\nexport function Hide() {\r\n    thisWindow.Hide();\r\n}\r\n\r\n/**\r\n * Maximises the window.\r\n */\r\nexport function Maximise() {\r\n    thisWindow.Maximise();\r\n}\r\n\r\n/**\r\n * Un-maximises the window.\r\n */\r\nexport function UnMaximise() {\r\n    thisWindow.UnMaximise();\r\n}\r\n\r\n/**\r\n * Toggles the maximisation of the window.\r\n */\r\nexport function ToggleMaximise() {\r\n    thisWindow.ToggleMaximise();\r\n}\r\n\r\n/**\r\n * Minimises the window.\r\n */\r\nexport function Minimise() {\r\n    thisWindow.Minimise();\r\n}\r\n\r\n/**\r\n * Un-minimises the window.\r\n */\r\nexport function UnMinimise() {\r\n    thisWindow.UnMinimise();\r\n}\r\n\r\n/**\r\n * Restores the window.\r\n */\r\nexport function Restore() {\r\n    thisWindow.Restore();\r\n}\r\n\r\n/**\r\n * Shows the window.\r\n */\r\nexport function Show() {\r\n    thisWindow.Show();\r\n}\r\n\r\n/**\r\n * Closes the window.\r\n */\r\nexport function Close() {\r\n    thisWindow.Close();\r\n}\r\n\r\n/**\r\n * Sets the background colour of the window.\r\n * @param {number} r - The red component of the colour.\r\n * @param {number} g - The green component of the colour.\r\n * @param {number} b - The blue component of the colour.\r\n * @param {number} a - The alpha component of the colour.\r\n */\r\nexport function SetBackgroundColour(r, g, b, a) {\r\n    thisWindow.SetBackgroundColour(r, g, b, a);\r\n}\r\n\r\n/**\r\n * Sets whether the window is resizable.\r\n * @param {boolean} resizable - Whether the window should be resizable.\r\n */\r\nexport function SetResizable(resizable) {\r\n    thisWindow.SetResizable(resizable);\r\n}\r\n\r\n/**\r\n * Gets the width of the window.\r\n */\r\nexport function Width() {\r\n    return thisWindow.Width();\r\n}\r\n\r\n/**\r\n * Gets the height of the window.\r\n */\r\nexport function Height() {\r\n    return thisWindow.Height();\r\n}\r\n\r\n/**\r\n * Zooms in the window.\r\n */\r\nexport function ZoomIn() {\r\n    thisWindow.ZoomIn();\r\n}\r\n\r\n/**\r\n * Zooms out the window.\r\n */\r\nexport function ZoomOut() {\r\n    thisWindow.ZoomOut();\r\n}\r\n\r\n/**\r\n * Resets the zoom of the window.\r\n */\r\nexport function ZoomReset() {\r\n    thisWindow.ZoomReset();\r\n}\r\n\r\n/**\r\n * Gets the zoom level of the window.\r\n */\r\nexport function GetZoomLevel() {\r\n    return thisWindow.GetZoomLevel();\r\n}\r\n\r\n/**\r\n * Sets the zoom level of the window.\r\n * @param {number} zoomLevel - The zoom level to set.\r\n */\r\nexport function SetZoomLevel(zoomLevel) {\r\n    thisWindow.SetZoomLevel(zoomLevel);\r\n}\r\n", "\r\nimport {Emit, WailsEvent} from \"./events\";\r\nimport {Question} from \"./dialogs\";\r\nimport {Get} from \"./window\";\r\nimport {OpenURL} from \"./browser\";\r\n\r\n/**\r\n * Sends an event with the given name and optional data.\r\n *\r\n * @param {string} eventName - The name of the event to send.\r\n * @param {any} [data=null] - Optional data to send along with the event.\r\n *\r\n * @return {void}\r\n */\r\nfunction sendEvent(eventName, data=null) {\r\n    let event = new WailsEvent(eventName, data);\r\n    Emit(event);\r\n}\r\n\r\n/**\r\n * Adds event listeners to elements with `wml-event` attribute.\r\n *\r\n * @return {void}\r\n */\r\nfunction addWMLEventListeners() {\r\n    const elements = document.querySelectorAll('[wml-event]');\r\n    elements.forEach(function (element) {\r\n        const eventType = element.getAttribute('wml-event');\r\n        const confirm = element.getAttribute('wml-confirm');\r\n        const trigger = element.getAttribute('wml-trigger') || \"click\";\r\n\r\n        let callback = function () {\r\n            if (confirm) {\r\n                Question({Title: \"Confirm\", Message:confirm, Detached: false, Buttons:[{Label:\"Yes\"},{Label:\"No\", IsDefault:true}]}).then(function (result) {\r\n                    if (result !== \"No\") {\r\n                        sendEvent(eventType);\r\n                    }\r\n                });\r\n                return;\r\n            }\r\n            sendEvent(eventType);\r\n        };\r\n\r\n        // Remove existing listeners\r\n        element.removeEventListener(trigger, callback);\r\n\r\n        // Add new listener\r\n        element.addEventListener(trigger, callback);\r\n    });\r\n}\r\n\r\n\r\n/**\r\n * Calls a method on a specified window.\r\n * @param {string} windowName - The name of the window to call the method on.\r\n * @param {string} method - The name of the method to call.\r\n */\r\nfunction callWindowMethod(windowName, method) {\r\n    let targetWindow = Get(windowName);\r\n    let methodMap = WindowMethods(targetWindow);\r\n    if (!methodMap.has(method)) {\r\n        console.log(\"Window method \" + method + \" not found\");\r\n    }\r\n    try {\r\n        methodMap.get(method)();\r\n    } catch (e) {\r\n        console.error(\"Error calling window method '\" + method + \"': \" + e);\r\n    }\r\n}\r\n\r\n/**\r\n * Adds window listeners for elements with the 'wml-window' attribute.\r\n * Removes any existing listeners before adding new ones.\r\n *\r\n * @return {void}\r\n */\r\nfunction addWMLWindowListeners() {\r\n    const elements = document.querySelectorAll('[wml-window]');\r\n    elements.forEach(function (element) {\r\n        const windowMethod = element.getAttribute('wml-window');\r\n        const confirm = element.getAttribute('wml-confirm');\r\n        const trigger = element.getAttribute('wml-trigger') || 'click';\r\n        const targetWindow = element.getAttribute('wml-target-window') || '';\r\n\r\n        let callback = function () {\r\n            if (confirm) {\r\n                Question({Title: \"Confirm\", Message:confirm, Buttons:[{Label:\"Yes\"},{Label:\"No\", IsDefault:true}]}).then(function (result) {\r\n                    if (result !== \"No\") {\r\n                        callWindowMethod(targetWindow, windowMethod);\r\n                    }\r\n                });\r\n                return;\r\n            }\r\n            callWindowMethod(targetWindow, windowMethod);\r\n        };\r\n\r\n        // Remove existing listeners\r\n        element.removeEventListener(trigger, callback);\r\n\r\n        // Add new listener\r\n        element.addEventListener(trigger, callback);\r\n    });\r\n}\r\n\r\n/**\r\n * Adds a listener to elements with the 'wml-openurl' attribute.\r\n * When the specified trigger event is fired on any of these elements,\r\n * the listener will open the URL specified by the 'wml-openurl' attribute.\r\n * If a 'wml-confirm' attribute is provided, a confirmation dialog will be displayed,\r\n * and the URL will only be opened if the user confirms.\r\n *\r\n * @return {void}\r\n */\r\nfunction addWMLOpenBrowserListener() {\r\n    const elements = document.querySelectorAll('[wml-openurl]');\r\n    elements.forEach(function (element) {\r\n        const url = element.getAttribute('wml-openurl');\r\n        const confirm = element.getAttribute('wml-confirm');\r\n        const trigger = element.getAttribute('wml-trigger') || \"click\";\r\n\r\n        let callback = function () {\r\n            if (confirm) {\r\n                Question({Title: \"Confirm\", Message:confirm, Buttons:[{Label:\"Yes\"},{Label:\"No\", IsDefault:true}]}).then(function (result) {\r\n                    if (result !== \"No\") {\r\n                        void OpenURL(url);\r\n                    }\r\n                });\r\n                return;\r\n            }\r\n            void OpenURL(url);\r\n        };\r\n\r\n        // Remove existing listeners\r\n        element.removeEventListener(trigger, callback);\r\n\r\n        // Add new listener\r\n        element.addEventListener(trigger, callback);\r\n    });\r\n}\r\n\r\n/**\r\n * Reloads the WML page by adding necessary event listeners and browser listeners.\r\n *\r\n * @return {void}\r\n */\r\nexport function Reload() {\r\n    addWMLEventListeners();\r\n    addWMLWindowListeners();\r\n    addWMLOpenBrowserListener();\r\n}\r\n\r\n/**\r\n * Returns a map of all methods in the current window.\r\n * @returns {Map} - A map of window methods.\r\n */\r\nfunction WindowMethods(targetWindow) {\r\n    // Create a new map to store methods\r\n    let result = new Map();\r\n\r\n    // Iterate over all properties of the window object\r\n    for (let method in targetWindow) {\r\n        // Check if the property is indeed a method (function)\r\n        if(typeof targetWindow[method] === 'function') {\r\n            // Add the method to the map\r\n            result.set(method, targetWindow[method]);\r\n        }\r\n\r\n    }\r\n    // Return the map of window methods\r\n    return result;\r\n}", "/*\r\n _\t   __\t  _ __\r\n| |\t / /___ _(_) /____\r\n| | /| / / __ `/ / / ___/\r\n| |/ |/ / /_/ / / (__  )\r\n|__/|__/\\__,_/_/_/____/\r\nThe electron alternative for Go\r\n(c) Lea Anthony 2019-present\r\n*/\r\n\r\n/* jshint esversion: 9 */\r\n\r\n/**\r\n * @typedef {import(\"./types\").WailsEvent} WailsEvent\r\n */\r\nimport {newRuntimeCallerWithID, objectNames} from \"./runtime\";\r\n\r\nimport {EventTypes} from \"./event_types\";\r\nexport const Types = EventTypes;\r\n\r\n// Setup\r\nwindow._wails = window._wails || {};\r\nwindow._wails.dispatchWailsEvent = dispatchWailsEvent;\r\n\r\nconst call = newRuntimeCallerWithID(objectNames.Events, '');\r\nconst EmitMethod = 0;\r\nconst eventListeners = new Map();\r\n\r\nclass Listener {\r\n    constructor(eventName, callback, maxCallbacks) {\r\n        this.eventName = eventName;\r\n        this.maxCallbacks = maxCallbacks || -1;\r\n        this.Callback = (data) => {\r\n            callback(data);\r\n            if (this.maxCallbacks === -1) return false;\r\n            this.maxCallbacks -= 1;\r\n            return this.maxCallbacks === 0;\r\n        };\r\n    }\r\n}\r\n\r\nexport class WailsEvent {\r\n    constructor(name, data = null) {\r\n        this.name = name;\r\n        this.data = data;\r\n    }\r\n}\r\n\r\nexport function setup() {\r\n}\r\n\r\nfunction dispatchWailsEvent(event) {\r\n    let listeners = eventListeners.get(event.name);\r\n    if (listeners) {\r\n        let toRemove = listeners.filter(listener => {\r\n            let remove = listener.Callback(event);\r\n            if (remove) return true;\r\n        });\r\n        if (toRemove.length > 0) {\r\n            listeners = listeners.filter(l => !toRemove.includes(l));\r\n            if (listeners.length === 0) eventListeners.delete(event.name);\r\n            else eventListeners.set(event.name, listeners);\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Register a callback function to be called multiple times for a specific event.\r\n *\r\n * @param {string} eventName - The name of the event to register the callback for.\r\n * @param {function} callback - The callback function to be called when the event is triggered.\r\n * @param {number} maxCallbacks - The maximum number of times the callback can be called for the event. Once the maximum number is reached, the callback will no longer be called.\r\n *\r\n @return {function} - A function that, when called, will unregister the callback from the event.\r\n */\r\nexport function OnMultiple(eventName, callback, maxCallbacks) {\r\n    let listeners = eventListeners.get(eventName) || [];\r\n    const thisListener = new Listener(eventName, callback, maxCallbacks);\r\n    listeners.push(thisListener);\r\n    eventListeners.set(eventName, listeners);\r\n    return () => listenerOff(thisListener);\r\n}\r\n\r\n/**\r\n * Registers a callback function to be executed when the specified event occurs.\r\n *\r\n * @param {string} eventName - The name of the event.\r\n * @param {function} callback - The callback function to be executed. It takes no parameters.\r\n * @return {function} - A function that, when called, will unregister the callback from the event. */\r\nexport function On(eventName, callback) { return OnMultiple(eventName, callback, -1); }\r\n\r\n/**\r\n * Registers a callback function to be executed only once for the specified event.\r\n *\r\n * @param {string} eventName - The name of the event.\r\n * @param {function} callback - The function to be executed when the event occurs.\r\n * @return {function} - A function that, when called, will unregister the callback from the event.\r\n */\r\nexport function Once(eventName, callback) { return OnMultiple(eventName, callback, 1); }\r\n\r\n/**\r\n * Removes the specified listener from the event listeners collection.\r\n * If all listeners for the event are removed, the event key is deleted from the collection.\r\n *\r\n * @param {Object} listener - The listener to be removed.\r\n */\r\nfunction listenerOff(listener) {\r\n    const eventName = listener.eventName;\r\n    let listeners = eventListeners.get(eventName).filter(l => l !== listener);\r\n    if (listeners.length === 0) eventListeners.delete(eventName);\r\n    else eventListeners.set(eventName, listeners);\r\n}\r\n\r\n\r\n/**\r\n * Removes event listeners for the specified event names.\r\n *\r\n * @param {string} eventName - The name of the event to remove listeners for.\r\n * @param {...string} additionalEventNames - Additional event names to remove listeners for.\r\n * @return {undefined}\r\n */\r\nexport function Off(eventName, ...additionalEventNames) {\r\n    let eventsToRemove = [eventName, ...additionalEventNames];\r\n    eventsToRemove.forEach(eventName => eventListeners.delete(eventName));\r\n}\r\n/**\r\n * Removes all event listeners.\r\n *\r\n * @function OffAll\r\n * @returns {void}\r\n */\r\nexport function OffAll() { eventListeners.clear(); }\r\n\r\n/**\r\n * Emits an event using the given event name.\r\n *\r\n * @param {WailsEvent} event - The name of the event to emit.\r\n * @returns {any} - The result of the emitted event.\r\n */\r\nexport function Emit(event) { return call(EmitMethod, event); }\r\n", "\nexport const EventTypes = {\n\tWindows: {\n\t\tSystemThemeChanged: \"windows:SystemThemeChanged\",\n\t\tAPMPowerStatusChange: \"windows:APMPowerStatusChange\",\n\t\tAPMSuspend: \"windows:APMSuspend\",\n\t\tAPMResumeAutomatic: \"windows:APMResumeAutomatic\",\n\t\tAPMResumeSuspend: \"windows:APMResumeSuspend\",\n\t\tAPMPowerSettingChange: \"windows:APMPowerSettingChange\",\n\t\tApplicationStarted: \"windows:ApplicationStarted\",\n\t\tWebViewNavigationCompleted: \"windows:WebViewNavigationCompleted\",\n\t\tWindowInactive: \"windows:WindowInactive\",\n\t\tWindowActive: \"windows:WindowActive\",\n\t\tWindowClickActive: \"windows:WindowClickActive\",\n\t\tWindowMaximise: \"windows:WindowMaximise\",\n\t\tWindowUnMaximise: \"windows:WindowUnMaximise\",\n\t\tWindowFullscreen: \"windows:WindowFullscreen\",\n\t\tWindowUnFullscreen: \"windows:WindowUnFullscreen\",\n\t\tWindowRestore: \"windows:WindowRestore\",\n\t\tWindowMinimise: \"windows:WindowMinimise\",\n\t\tWindowUnMinimise: \"windows:WindowUnMinimise\",\n\t\tWindowClose: \"windows:WindowClose\",\n\t\tWindowSetFocus: \"windows:WindowSetFocus\",\n\t\tWindowKillFocus: \"windows:WindowKillFocus\",\n\t\tWindowDragDrop: \"windows:WindowDragDrop\",\n\t\tWindowDragEnter: \"windows:WindowDragEnter\",\n\t\tWindowDragLeave: \"windows:WindowDragLeave\",\n\t\tWindowDragOver: \"windows:WindowDragOver\",\n\t},\n\tMac: {\n\t\tApplicationDidBecomeActive: \"mac:ApplicationDidBecomeActive\",\n\t\tApplicationDidChangeBackingProperties: \"mac:ApplicationDidChangeBackingProperties\",\n\t\tApplicationDidChangeEffectiveAppearance: \"mac:ApplicationDidChangeEffectiveAppearance\",\n\t\tApplicationDidChangeIcon: \"mac:ApplicationDidChangeIcon\",\n\t\tApplicationDidChangeOcclusionState: \"mac:ApplicationDidChangeOcclusionState\",\n\t\tApplicationDidChangeScreenParameters: \"mac:ApplicationDidChangeScreenParameters\",\n\t\tApplicationDidChangeStatusBarFrame: \"mac:ApplicationDidChangeStatusBarFrame\",\n\t\tApplicationDidChangeStatusBarOrientation: \"mac:ApplicationDidChangeStatusBarOrientation\",\n\t\tApplicationDidFinishLaunching: \"mac:ApplicationDidFinishLaunching\",\n\t\tApplicationDidHide: \"mac:ApplicationDidHide\",\n\t\tApplicationDidResignActiveNotification: \"mac:ApplicationDidResignActiveNotification\",\n\t\tApplicationDidUnhide: \"mac:ApplicationDidUnhide\",\n\t\tApplicationDidUpdate: \"mac:ApplicationDidUpdate\",\n\t\tApplicationWillBecomeActive: \"mac:ApplicationWillBecomeActive\",\n\t\tApplicationWillFinishLaunching: \"mac:ApplicationWillFinishLaunching\",\n\t\tApplicationWillHide: \"mac:ApplicationWillHide\",\n\t\tApplicationWillResignActive: \"mac:ApplicationWillResignActive\",\n\t\tApplicationWillTerminate: \"mac:ApplicationWillTerminate\",\n\t\tApplicationWillUnhide: \"mac:ApplicationWillUnhide\",\n\t\tApplicationWillUpdate: \"mac:ApplicationWillUpdate\",\n\t\tApplicationDidChangeTheme: \"mac:ApplicationDidChangeTheme!\",\n\t\tApplicationShouldHandleReopen: \"mac:ApplicationShouldHandleReopen!\",\n\t\tWindowDidBecomeKey: \"mac:WindowDidBecomeKey\",\n\t\tWindowDidBecomeMain: \"mac:WindowDidBecomeMain\",\n\t\tWindowDidBeginSheet: \"mac:WindowDidBeginSheet\",\n\t\tWindowDidChangeAlpha: \"mac:WindowDidChangeAlpha\",\n\t\tWindowDidChangeBackingLocation: \"mac:WindowDidChangeBackingLocation\",\n\t\tWindowDidChangeBackingProperties: \"mac:WindowDidChangeBackingProperties\",\n\t\tWindowDidChangeCollectionBehavior: \"mac:WindowDidChangeCollectionBehavior\",\n\t\tWindowDidChangeEffectiveAppearance: \"mac:WindowDidChangeEffectiveAppearance\",\n\t\tWindowDidChangeOcclusionState: \"mac:WindowDidChangeOcclusionState\",\n\t\tWindowDidChangeOrderingMode: \"mac:WindowDidChangeOrderingMode\",\n\t\tWindowDidChangeScreen: \"mac:WindowDidChangeScreen\",\n\t\tWindowDidChangeScreenParameters: \"mac:WindowDidChangeScreenParameters\",\n\t\tWindowDidChangeScreenProfile: \"mac:WindowDidChangeScreenProfile\",\n\t\tWindowDidChangeScreenSpace: \"mac:WindowDidChangeScreenSpace\",\n\t\tWindowDidChangeScreenSpaceProperties: \"mac:WindowDidChangeScreenSpaceProperties\",\n\t\tWindowDidChangeSharingType: \"mac:WindowDidChangeSharingType\",\n\t\tWindowDidChangeSpace: \"mac:WindowDidChangeSpace\",\n\t\tWindowDidChangeSpaceOrderingMode: \"mac:WindowDidChangeSpaceOrderingMode\",\n\t\tWindowDidChangeTitle: \"mac:WindowDidChangeTitle\",\n\t\tWindowDidChangeToolbar: \"mac:WindowDidChangeToolbar\",\n\t\tWindowDidChangeVisibility: \"mac:WindowDidChangeVisibility\",\n\t\tWindowDidDeminiaturize: \"mac:WindowDidDeminiaturize\",\n\t\tWindowDidEndSheet: \"mac:WindowDidEndSheet\",\n\t\tWindowDidEnterFullScreen: \"mac:WindowDidEnterFullScreen\",\n\t\tWindowDidEnterVersionBrowser: \"mac:WindowDidEnterVersionBrowser\",\n\t\tWindowDidExitFullScreen: \"mac:WindowDidExitFullScreen\",\n\t\tWindowDidExitVersionBrowser: \"mac:WindowDidExitVersionBrowser\",\n\t\tWindowDidExpose: \"mac:WindowDidExpose\",\n\t\tWindowDidFocus: \"mac:WindowDidFocus\",\n\t\tWindowDidMiniaturize: \"mac:WindowDidMiniaturize\",\n\t\tWindowDidMove: \"mac:WindowDidMove\",\n\t\tWindowDidOrderOffScreen: \"mac:WindowDidOrderOffScreen\",\n\t\tWindowDidOrderOnScreen: \"mac:WindowDidOrderOnScreen\",\n\t\tWindowDidResignKey: \"mac:WindowDidResignKey\",\n\t\tWindowDidResignMain: \"mac:WindowDidResignMain\",\n\t\tWindowDidResize: \"mac:WindowDidResize\",\n\t\tWindowDidUpdate: \"mac:WindowDidUpdate\",\n\t\tWindowDidUpdateAlpha: \"mac:WindowDidUpdateAlpha\",\n\t\tWindowDidUpdateCollectionBehavior: \"mac:WindowDidUpdateCollectionBehavior\",\n\t\tWindowDidUpdateCollectionProperties: \"mac:WindowDidUpdateCollectionProperties\",\n\t\tWindowDidUpdateShadow: \"mac:WindowDidUpdateShadow\",\n\t\tWindowDidUpdateTitle: \"mac:WindowDidUpdateTitle\",\n\t\tWindowDidUpdateToolbar: \"mac:WindowDidUpdateToolbar\",\n\t\tWindowDidUpdateVisibility: \"mac:WindowDidUpdateVisibility\",\n\t\tWindowShouldClose: \"mac:WindowShouldClose!\",\n\t\tWindowWillBecomeKey: \"mac:WindowWillBecomeKey\",\n\t\tWindowWillBecomeMain: \"mac:WindowWillBecomeMain\",\n\t\tWindowWillBeginSheet: \"mac:WindowWillBeginSheet\",\n\t\tWindowWillChangeOrderingMode: \"mac:WindowWillChangeOrderingMode\",\n\t\tWindowWillClose: \"mac:WindowWillClose\",\n\t\tWindowWillDeminiaturize: \"mac:WindowWillDeminiaturize\",\n\t\tWindowWillEnterFullScreen: \"mac:WindowWillEnterFullScreen\",\n\t\tWindowWillEnterVersionBrowser: \"mac:WindowWillEnterVersionBrowser\",\n\t\tWindowWillExitFullScreen: \"mac:WindowWillExitFullScreen\",\n\t\tWindowWillExitVersionBrowser: \"mac:WindowWillExitVersionBrowser\",\n\t\tWindowWillFocus: \"mac:WindowWillFocus\",\n\t\tWindowWillMiniaturize: \"mac:WindowWillMiniaturize\",\n\t\tWindowWillMove: \"mac:WindowWillMove\",\n\t\tWindowWillOrderOffScreen: \"mac:WindowWillOrderOffScreen\",\n\t\tWindowWillOrderOnScreen: \"mac:WindowWillOrderOnScreen\",\n\t\tWindowWillResignMain: \"mac:WindowWillResignMain\",\n\t\tWindowWillResize: \"mac:WindowWillResize\",\n\t\tWindowWillUnfocus: \"mac:WindowWillUnfocus\",\n\t\tWindowWillUpdate: \"mac:WindowWillUpdate\",\n\t\tWindowWillUpdateAlpha: \"mac:WindowWillUpdateAlpha\",\n\t\tWindowWillUpdateCollectionBehavior: \"mac:WindowWillUpdateCollectionBehavior\",\n\t\tWindowWillUpdateCollectionProperties: \"mac:WindowWillUpdateCollectionProperties\",\n\t\tWindowWillUpdateShadow: \"mac:WindowWillUpdateShadow\",\n\t\tWindowWillUpdateTitle: \"mac:WindowWillUpdateTitle\",\n\t\tWindowWillUpdateToolbar: \"mac:WindowWillUpdateToolbar\",\n\t\tWindowWillUpdateVisibility: \"mac:WindowWillUpdateVisibility\",\n\t\tWindowWillUseStandardFrame: \"mac:WindowWillUseStandardFrame\",\n\t\tMenuWillOpen: \"mac:MenuWillOpen\",\n\t\tMenuDidOpen: \"mac:MenuDidOpen\",\n\t\tMenuDidClose: \"mac:MenuDidClose\",\n\t\tMenuWillSendAction: \"mac:MenuWillSendAction\",\n\t\tMenuDidSendAction: \"mac:MenuDidSendAction\",\n\t\tMenuWillHighlightItem: \"mac:MenuWillHighlightItem\",\n\t\tMenuDidHighlightItem: \"mac:MenuDidHighlightItem\",\n\t\tMenuWillDisplayItem: \"mac:MenuWillDisplayItem\",\n\t\tMenuDidDisplayItem: \"mac:MenuDidDisplayItem\",\n\t\tMenuWillAddItem: \"mac:MenuWillAddItem\",\n\t\tMenuDidAddItem: \"mac:MenuDidAddItem\",\n\t\tMenuWillRemoveItem: \"mac:MenuWillRemoveItem\",\n\t\tMenuDidRemoveItem: \"mac:MenuDidRemoveItem\",\n\t\tMenuWillBeginTracking: \"mac:MenuWillBeginTracking\",\n\t\tMenuDidBeginTracking: \"mac:MenuDidBeginTracking\",\n\t\tMenuWillEndTracking: \"mac:MenuWillEndTracking\",\n\t\tMenuDidEndTracking: \"mac:MenuDidEndTracking\",\n\t\tMenuWillUpdate: \"mac:MenuWillUpdate\",\n\t\tMenuDidUpdate: \"mac:MenuDidUpdate\",\n\t\tMenuWillPopUp: \"mac:MenuWillPopUp\",\n\t\tMenuDidPopUp: \"mac:MenuDidPopUp\",\n\t\tMenuWillSendActionToItem: \"mac:MenuWillSendActionToItem\",\n\t\tMenuDidSendActionToItem: \"mac:MenuDidSendActionToItem\",\n\t\tWebViewDidStartProvisionalNavigation: \"mac:WebViewDidStartProvisionalNavigation\",\n\t\tWebViewDidReceiveServerRedirectForProvisionalNavigation: \"mac:WebViewDidReceiveServerRedirectForProvisionalNavigation\",\n\t\tWebViewDidFinishNavigation: \"mac:WebViewDidFinishNavigation\",\n\t\tWebViewDidCommitNavigation: \"mac:WebViewDidCommitNavigation\",\n\t\tWindowFileDraggingEntered: \"mac:WindowFileDraggingEntered\",\n\t\tWindowFileDraggingPerformed: \"mac:WindowFileDraggingPerformed\",\n\t\tWindowFileDraggingExited: \"mac:WindowFileDraggingExited\",\n\t},\n\tLinux: {\n\t\tSystemThemeChanged: \"linux:SystemThemeChanged\",\n\t},\n\tCommon: {\n\t\tApplicationStarted: \"common:ApplicationStarted\",\n\t\tWindowMaximise: \"common:WindowMaximise\",\n\t\tWindowUnMaximise: \"common:WindowUnMaximise\",\n\t\tWindowFullscreen: \"common:WindowFullscreen\",\n\t\tWindowUnFullscreen: \"common:WindowUnFullscreen\",\n\t\tWindowRestore: \"common:WindowRestore\",\n\t\tWindowMinimise: \"common:WindowMinimise\",\n\t\tWindowUnMinimise: \"common:WindowUnMinimise\",\n\t\tWindowClosing: \"common:WindowClosing\",\n\t\tWindowZoom: \"common:WindowZoom\",\n\t\tWindowZoomIn: \"common:WindowZoomIn\",\n\t\tWindowZoomOut: \"common:WindowZoomOut\",\n\t\tWindowZoomReset: \"common:WindowZoomReset\",\n\t\tWindowFocus: \"common:WindowFocus\",\n\t\tWindowLostFocus: \"common:WindowLostFocus\",\n\t\tWindowShow: \"common:WindowShow\",\n\t\tWindowHide: \"common:WindowHide\",\n\t\tWindowDPIChanged: \"common:WindowDPIChanged\",\n\t\tWindowFilesDropped: \"common:WindowFilesDropped\",\n\t\tWindowRuntimeReady: \"common:WindowRuntimeReady\",\n\t\tThemeChanged: \"common:ThemeChanged\",\n\t},\n};\n", "/*\r\n _\t   __\t  _ __\r\n| |\t / /___ _(_) /____\r\n| | /| / / __ `/ / / ___/\r\n| |/ |/ / /_/ / / (__  )\r\n|__/|__/\\__,_/_/_/____/\r\nThe electron alternative for Go\r\n(c) Lea Anthony 2019-present\r\n*/\r\n\r\n/* jshint esversion: 9 */\r\n\r\n/**\r\n * @typedef {Object} OpenFileDialogOptions\r\n * @property {boolean} [CanChooseDirectories] - Indicates if directories can be chosen.\r\n * @property {boolean} [CanChooseFiles] - Indicates if files can be chosen.\r\n * @property {boolean} [CanCreateDirectories] - Indicates if directories can be created.\r\n * @property {boolean} [ShowHiddenFiles] - Indicates if hidden files should be shown.\r\n * @property {boolean} [ResolvesAliases] - Indicates if aliases should be resolved.\r\n * @property {boolean} [AllowsMultipleSelection] - Indicates if multiple selection is allowed.\r\n * @property {boolean} [HideExtension] - Indicates if the extension should be hidden.\r\n * @property {boolean} [CanSelectHiddenExtension] - Indicates if hidden extensions can be selected.\r\n * @property {boolean} [TreatsFilePackagesAsDirectories] - Indicates if file packages should be treated as directories.\r\n * @property {boolean} [AllowsOtherFiletypes] - Indicates if other file types are allowed.\r\n * @property {FileFilter[]} [Filters] - Array of file filters.\r\n * @property {string} [Title] - Title of the dialog.\r\n * @property {string} [Message] - Message to show in the dialog.\r\n * @property {string} [ButtonText] - Text to display on the button.\r\n * @property {string} [Directory] - Directory to open in the dialog.\r\n * @property {boolean} [Detached] - Indicates if the dialog should appear detached from the main window.\r\n */\r\n\r\n\r\n/**\r\n * @typedef {Object} SaveFileDialogOptions\r\n * @property {string} [Filename] - Default filename to use in the dialog.\r\n * @property {boolean} [CanChooseDirectories] - Indicates if directories can be chosen.\r\n * @property {boolean} [CanChooseFiles] - Indicates if files can be chosen.\r\n * @property {boolean} [CanCreateDirectories] - Indicates if directories can be created.\r\n * @property {boolean} [ShowHiddenFiles] - Indicates if hidden files should be shown.\r\n * @property {boolean} [ResolvesAliases] - Indicates if aliases should be resolved.\r\n * @property {boolean} [AllowsMultipleSelection] - Indicates if multiple selection is allowed.\r\n * @property {boolean} [HideExtension] - Indicates if the extension should be hidden.\r\n * @property {boolean} [CanSelectHiddenExtension] - Indicates if hidden extensions can be selected.\r\n * @property {boolean} [TreatsFilePackagesAsDirectories] - Indicates if file packages should be treated as directories.\r\n * @property {boolean} [AllowsOtherFiletypes] - Indicates if other file types are allowed.\r\n * @property {FileFilter[]} [Filters] - Array of file filters.\r\n * @property {string} [Title] - Title of the dialog.\r\n * @property {string} [Message] - Message to show in the dialog.\r\n * @property {string} [ButtonText] - Text to display on the button.\r\n * @property {string} [Directory] - Directory to open in the dialog.\r\n * @property {boolean} [Detached] - Indicates if the dialog should appear detached from the main window.\r\n */\r\n\r\n/**\r\n * @typedef {Object} MessageDialogOptions\r\n * @property {string} [Title] - The title of the dialog window.\r\n * @property {string} [Message] - The main message to show in the dialog.\r\n * @property {Button[]} [Buttons] - Array of button options to show in the dialog.\r\n * @property {boolean} [Detached] - True if the dialog should appear detached from the main window (if applicable).\r\n */\r\n\r\n/**\r\n * @typedef {Object} Button\r\n * @property {string} [Label] - Text that appears within the button.\r\n * @property {boolean} [IsCancel] - True if the button should cancel an operation when clicked.\r\n * @property {boolean} [IsDefault] - True if the button should be the default action when the user presses enter.\r\n */\r\n\r\n/**\r\n * @typedef {Object} FileFilter\r\n * @property {string} [DisplayName] - Display name for the filter, it could be \"Text Files\", \"Images\" etc.\r\n * @property {string} [Pattern] - Pattern to match for the filter, e.g. \"*.txt;*.md\" for text markdown files.\r\n */\r\n\r\n// setup\r\nwindow._wails = window._wails || {};\r\nwindow._wails.dialogErrorCallback = dialogErrorCallback;\r\nwindow._wails.dialogResultCallback = dialogResultCallback;\r\n\r\nimport {newRuntimeCallerWithID, objectNames} from \"./runtime\";\r\n\r\nimport { nanoid } from 'nanoid/non-secure';\r\n\r\n// Define constants from the `methods` object in Title Case\r\nconst DialogInfo = 0;\r\nconst DialogWarning = 1;\r\nconst DialogError = 2;\r\nconst DialogQuestion = 3;\r\nconst DialogOpenFile = 4;\r\nconst DialogSaveFile = 5;\r\n\r\nconst call = newRuntimeCallerWithID(objectNames.Dialog, '');\r\nconst dialogResponses = new Map();\r\n\r\n/**\r\n * Generates a unique id that is not present in dialogResponses.\r\n * @returns {string} unique id\r\n */\r\nfunction generateID() {\r\n    let result;\r\n    do {\r\n        result = nanoid();\r\n    } while (dialogResponses.has(result));\r\n    return result;\r\n}\r\n\r\n/**\r\n * Shows a dialog of specified type with the given options.\r\n * @param {number} type - type of dialog\r\n * @param {MessageDialogOptions|OpenFileDialogOptions|SaveFileDialogOptions} options - options for the dialog\r\n * @returns {Promise} promise that resolves with result of dialog\r\n */\r\nfunction dialog(type, options = {}) {\r\n    const id = generateID();\r\n    options[\"dialog-id\"] = id;\r\n    return new Promise((resolve, reject) => {\r\n        dialogResponses.set(id, {resolve, reject});\r\n        call(type, options).catch((error) => {\r\n            reject(error);\r\n            dialogResponses.delete(id);\r\n        });\r\n    });\r\n}\r\n\r\n/**\r\n * Handles the callback from a dialog.\r\n *\r\n * @param {string} id - The ID of the dialog response.\r\n * @param {string} data - The data received from the dialog.\r\n * @param {boolean} isJSON - Flag indicating whether the data is in JSON format.\r\n *\r\n * @return {undefined}\r\n */\r\nfunction dialogResultCallback(id, data, isJSON) {\r\n    let p = dialogResponses.get(id);\r\n    if (p) {\r\n        if (isJSON) {\r\n            p.resolve(JSON.parse(data));\r\n        } else {\r\n            p.resolve(data);\r\n        }\r\n        dialogResponses.delete(id);\r\n    }\r\n}\r\n\r\n/**\r\n * Callback function for handling errors in dialog.\r\n *\r\n * @param {string} id - The id of the dialog response.\r\n * @param {string} message - The error message.\r\n *\r\n * @return {void}\r\n */\r\nfunction dialogErrorCallback(id, message) {\r\n    let p = dialogResponses.get(id);\r\n    if (p) {\r\n        p.reject(message);\r\n        dialogResponses.delete(id);\r\n    }\r\n}\r\n\r\n\r\n// Replace `methods` with constants in Title Case\r\n\r\n/**\r\n * @param {MessageDialogOptions} options - Dialog options\r\n * @returns {Promise<string>} - The label of the button pressed\r\n */\r\nexport const Info = (options) => dialog(DialogInfo, options);\r\n\r\n/**\r\n * @param {MessageDialogOptions} options - Dialog options\r\n * @returns {Promise<string>} - The label of the button pressed\r\n */\r\nexport const Warning = (options) => dialog(DialogWarning, options);\r\n\r\n/**\r\n * @param {MessageDialogOptions} options - Dialog options\r\n * @returns {Promise<string>} - The label of the button pressed\r\n */\r\nexport const Error = (options) => dialog(DialogError, options);\r\n\r\n/**\r\n * @param {MessageDialogOptions} options - Dialog options\r\n * @returns {Promise<string>} - The label of the button pressed\r\n */\r\nexport const Question = (options) => dialog(DialogQuestion, options);\r\n\r\n/**\r\n * @param {OpenFileDialogOptions} options - Dialog options\r\n * @returns {Promise<string[]|string>} Returns selected file or list of files. Returns blank string if no file is selected.\r\n */\r\nexport const OpenFile = (options) => dialog(DialogOpenFile, options);\r\n\r\n/**\r\n * @param {SaveFileDialogOptions} options - Dialog options\r\n * @returns {Promise<string>} Returns the selected file. Returns blank string if no file is selected.\r\n */\r\nexport const SaveFile = (options) => dialog(DialogSaveFile, options);\r\n", "/*\r\n _\t   __\t  _ __\r\n| |\t / /___ _(_) /____\r\n| | /| / / __ `/ / / ___/\r\n| |/ |/ / /_/ / / (__  )\r\n|__/|__/\\__,_/_/_/____/\r\nThe electron alternative for Go\r\n(c) Lea Anthony 2019-present\r\n*/\r\n\r\n/* jshint esversion: 9 */\r\nimport { newRuntimeCallerWithID, objectNames } from \"./runtime\";\r\nimport { nanoid } from 'nanoid/non-secure';\r\n\r\n// Setup\r\nwindow._wails = window._wails || {};\r\nwindow._wails.callResultHandler = resultHandler;\r\nwindow._wails.callErrorHandler = errorHandler;\r\n\r\n\r\nconst CallBinding = 0;\r\nconst call = newRuntimeCallerWithID(objectNames.Call, '');\r\nlet callResponses = new Map();\r\n\r\n/**\r\n * Generates a unique ID using the nanoid library.\r\n *\r\n * @return {string} - A unique ID that does not exist in the callResponses set.\r\n */\r\nfunction generateID() {\r\n    let result;\r\n    do {\r\n        result = nanoid();\r\n    } while (callResponses.has(result));\r\n    return result;\r\n}\r\n\r\n/**\r\n * Handles the result of a call request.\r\n *\r\n * @param {string} id - The id of the request to handle the result for.\r\n * @param {string} data - The result data of the request.\r\n * @param {boolean} isJSON - Indicates whether the data is JSON or not.\r\n *\r\n * @return {undefined} - This method does not return any value.\r\n */\r\nfunction resultHandler(id, data, isJSON) {\r\n    const promiseHandler = getAndDeleteResponse(id);\r\n    if (promiseHandler) {\r\n        promiseHandler.resolve(isJSON ? JSON.parse(data) : data);\r\n    }\r\n}\r\n\r\n/**\r\n * Handles the error from a call request.\r\n *\r\n * @param {string} id - The id of the promise handler.\r\n * @param {string} message - The error message to reject the promise handler with.\r\n *\r\n * @return {void}\r\n */\r\nfunction errorHandler(id, message) {\r\n    const promiseHandler = getAndDeleteResponse(id);\r\n    if (promiseHandler) {\r\n        promiseHandler.reject(message);\r\n    }\r\n}\r\n\r\n/**\r\n * Retrieves and removes the response associated with the given ID from the callResponses map.\r\n *\r\n * @param {any} id - The ID of the response to be retrieved and removed.\r\n *\r\n * @returns {any} The response object associated with the given ID.\r\n */\r\nfunction getAndDeleteResponse(id) {\r\n    const response = callResponses.get(id);\r\n    callResponses.delete(id);\r\n    return response;\r\n}\r\n\r\n/**\r\n * Executes a call using the provided type and options.\r\n *\r\n * @param {string|number} type - The type of call to execute.\r\n * @param {Object} [options={}] - Additional options for the call.\r\n * @return {Promise} - A promise that will be resolved or rejected based on the result of the call.\r\n */\r\nfunction callBinding(type, options = {}) {\r\n    return new Promise((resolve, reject) => {\r\n        const id = generateID();\r\n        options[\"call-id\"] = id;\r\n        callResponses.set(id, { resolve, reject });\r\n        call(type, options).catch((error) => {\r\n            reject(error);\r\n            callResponses.delete(id);\r\n        });\r\n    });\r\n}\r\n\r\n/**\r\n * Call method.\r\n *\r\n * @param {Object} options - The options for the method.\r\n * @returns {Object} - The result of the call.\r\n */\r\nexport function Call(options) {\r\n    return callBinding(CallBinding, options);\r\n}\r\n\r\n/**\r\n * Executes a method by name.\r\n *\r\n * @param {string} name - The name of the method in the format 'package.struct.method'.\r\n * @param {...*} args - The arguments to pass to the method.\r\n * @throws {Error} If the name is not a string or is not in the correct format.\r\n * @returns {*} The result of the method execution.\r\n */\r\nexport function ByName(name, ...args) {\r\n    if (typeof name !== \"string\" || name.split(\".\").length !== 3) {\r\n        throw new Error(\"CallByName requires a string in the format 'package.struct.method'\");\r\n    }\r\n    let [packageName, structName, methodName] = name.split(\".\");\r\n    return callBinding(CallBinding, {\r\n        packageName,\r\n        structName,\r\n        methodName,\r\n        args\r\n    });\r\n}\r\n\r\n/**\r\n * Calls a method by its ID with the specified arguments.\r\n *\r\n * @param {number} methodID - The ID of the method to call.\r\n * @param {...*} args - The arguments to pass to the method.\r\n * @return {*} - The result of the method call.\r\n */\r\nexport function ByID(methodID, ...args) {\r\n    return callBinding(CallBinding, {\r\n        methodID,\r\n        args\r\n    });\r\n}\r\n\r\n/**\r\n * Calls a method on a plugin.\r\n *\r\n * @param {string} pluginName - The name of the plugin.\r\n * @param {string} methodName - The name of the method to call.\r\n * @param {...*} args - The arguments to pass to the method.\r\n * @returns {*} - The result of the method call.\r\n */\r\nexport function Plugin(pluginName, methodName, ...args) {\r\n    return callBinding(CallBinding, {\r\n        packageName: \"wails-plugins\",\r\n        structName: pluginName,\r\n        methodName,\r\n        args\r\n    });\r\n}\r\n", "/*\r\n _\t   __\t  _ __\r\n| |\t / /___ _(_) /____\r\n| | /| / / __ `/ / / ___/\r\n| |/ |/ / /_/ / / (__  )\r\n|__/|__/\\__,_/_/_/____/\r\nThe electron alternative for Go\r\n(c) Lea Anthony 2019-present\r\n*/\r\n\r\n/* jshint esversion: 9 */\r\n\r\nimport {invoke, IsWindows} from \"./system\";\r\nimport {GetFlag} from \"./flags\";\r\n\r\n// Setup\r\nwindow._wails = window._wails || {};\r\nwindow._wails.setResizable = setResizable;\r\nwindow._wails.endDrag = endDrag;\r\nwindow.addEventListener('mousedown', onMouseDown);\r\nwindow.addEventListener('mousemove', onMouseMove);\r\nwindow.addEventListener('mouseup', onMouseUp);\r\n\r\n\r\nlet shouldDrag = false;\r\nlet resizeEdge = null;\r\nlet resizable = false;\r\nlet defaultCursor = \"auto\";\r\n\r\nfunction dragTest(e) {\r\n    let val = window.getComputedStyle(e.target).getPropertyValue(\"--webkit-app-region\");\r\n    if (!val || val === \"\" || val.trim() !== \"drag\" || e.buttons !== 1) {\r\n        return false;\r\n    }\r\n    return e.detail === 1;\r\n}\r\n\r\nfunction setResizable(value) {\r\n    resizable = value;\r\n}\r\n\r\nfunction endDrag() {\r\n    document.body.style.cursor = 'default';\r\n    shouldDrag = false;\r\n}\r\n\r\nfunction testResize() {\r\n    if( resizeEdge ) {\r\n        invoke(`resize:${resizeEdge}`);\r\n        return true\r\n    }\r\n    return false;\r\n}\r\n\r\nfunction onMouseDown(e) {\r\n    if(IsWindows() && testResize() || dragTest(e)) {\r\n        shouldDrag = !!isValidDrag(e);\r\n    }\r\n}\r\n\r\nfunction isValidDrag(e) {\r\n    // Ignore drag on scrollbars\r\n    return !(e.offsetX > e.target.clientWidth || e.offsetY > e.target.clientHeight);\r\n}\r\n\r\nfunction onMouseUp(e) {\r\n    let mousePressed = e.buttons !== undefined ? e.buttons : e.which;\r\n    if (mousePressed > 0) {\r\n        endDrag();\r\n    }\r\n}\r\n\r\nfunction setResize(cursor = defaultCursor) {\r\n    document.documentElement.style.cursor = cursor;\r\n    resizeEdge = cursor;\r\n}\r\n\r\nfunction onMouseMove(e) {\r\n    shouldDrag = checkDrag(e);\r\n    if (IsWindows() && resizable) {\r\n        handleResize(e);\r\n    }\r\n}\r\n\r\nfunction checkDrag(e) {\r\n    let mousePressed = e.buttons !== undefined ? e.buttons : e.which;\r\n    if(shouldDrag && mousePressed > 0) {\r\n        invoke(\"drag\");\r\n        return false;\r\n    }\r\n    return shouldDrag;\r\n}\r\n\r\nfunction handleResize(e) {\r\n    let resizeHandleHeight = GetFlag(\"system.resizeHandleHeight\") || 5;\r\n    let resizeHandleWidth = GetFlag(\"system.resizeHandleWidth\") || 5;\r\n\r\n    // Extra pixels for the corner areas\r\n    let cornerExtra = GetFlag(\"resizeCornerExtra\") || 10;\r\n\r\n    let rightBorder = window.outerWidth - e.clientX < resizeHandleWidth;\r\n    let leftBorder = e.clientX < resizeHandleWidth;\r\n    let topBorder = e.clientY < resizeHandleHeight;\r\n    let bottomBorder = window.outerHeight - e.clientY < resizeHandleHeight;\r\n\r\n    // Adjust for corners\r\n    let rightCorner = window.outerWidth - e.clientX < (resizeHandleWidth + cornerExtra);\r\n    let leftCorner = e.clientX < (resizeHandleWidth + cornerExtra);\r\n    let topCorner = e.clientY < (resizeHandleHeight + cornerExtra);\r\n    let bottomCorner = window.outerHeight - e.clientY < (resizeHandleHeight + cornerExtra);\r\n\r\n    // If we aren't on an edge, but were, reset the cursor to default\r\n    if (!leftBorder && !rightBorder && !topBorder && !bottomBorder && resizeEdge !== undefined) {\r\n        setResize();\r\n    }\r\n    // Adjusted for corner areas\r\n    else if (rightCorner && bottomCorner) setResize(\"se-resize\");\r\n    else if (leftCorner && bottomCorner) setResize(\"sw-resize\");\r\n    else if (leftCorner && topCorner) setResize(\"nw-resize\");\r\n    else if (topCorner && rightCorner) setResize(\"ne-resize\");\r\n    else if (leftBorder) setResize(\"w-resize\");\r\n    else if (topBorder) setResize(\"n-resize\");\r\n    else if (bottomBorder) setResize(\"s-resize\");\r\n    else if (rightBorder) setResize(\"e-resize\");\r\n}\r\n", "/*\r\n _\t   __\t  _ __\r\n| |\t / /___ _(_) /____\r\n| | /| / / __ `/ / / ___/\r\n| |/ |/ / /_/ / / (__  )\r\n|__/|__/\\__,_/_/_/____/\r\nThe electron alternative for Go\r\n(c) Lea Anthony 2019-present\r\n*/\r\n\r\n// Setup\r\nwindow.wails = window.wails || {};\r\nwindow._wails = window._wails || {};\r\n\r\nimport * as Application from \"./application\";\r\nimport * as Browser from \"./browser\";\r\nimport * as Clipboard from \"./clipboard\";\r\nimport * as ContextMenu from \"./contextmenu\";\r\nimport * as Flags from \"./flags\";\r\nimport * as Screens from \"./screens\";\r\nimport * as System from \"./system\";\r\nimport * as Window from \"./window\";\r\nimport * as WML from './wml';\r\nimport * as Events from \"./events\";\r\nimport * as Dialogs from \"./dialogs\";\r\nimport * as Call from \"./calls\";\r\nimport * as Drag from \"./drag\";\r\nimport {invoke} from \"./system\";\r\n\r\n\r\nexport { Application, Browser, Call, Clipboard, Dialogs, Events, Flags, Screens, System, Window, WML};\r\n\r\n\r\n/***\r\n This technique for proper load detection is taken from HTMX:\r\n\r\n BSD 2-Clause License\r\n\r\n Copyright (c) 2020, Big Sky Software\r\n All rights reserved.\r\n\r\n Redistribution and use in source and binary forms, with or without\r\n modification, are permitted provided that the following conditions are met:\r\n\r\n 1. Redistributions of source code must retain the above copyright notice, this\r\n list of conditions and the following disclaimer.\r\n\r\n 2. Redistributions in binary form must reproduce the above copyright notice,\r\n this list of conditions and the following disclaimer in the documentation\r\n and/or other materials provided with the distribution.\r\n\r\n THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\r\n FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\r\n DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\r\n SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\r\n CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\r\n OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\r\n OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n\r\n ***/\r\n\r\nwindow.wails = {\r\n    Application,\r\n    Browser,\r\n    Call,\r\n    Clipboard,\r\n    Dialogs,\r\n    Events,\r\n    Flags,\r\n    Screens,\r\n    System,\r\n    Window,\r\n    WML,\r\n};\r\ninvoke('wails:runtime:ready');\r\n\r\nlet isReady = false;\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n    isReady = true\r\n})\r\n\r\nfunction whenReady(fn) {\r\n    if (isReady || document.readyState === 'complete') {\r\n        fn();\r\n    } else {\r\n        document.addEventListener('DOMContentLoaded', fn);\r\n    }\r\n}\r\n\r\nwhenReady(() => {\r\n    WML.Reload();\r\n});\r\n"],
  "mappings": "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",
  "names": ["size", "call", "call", "call", "call", "call", "Hide", "Show", "call", "width", "height", "resizable", "Hide", "Show", "call", "eventName", "Error", "call", "Error", "call", "generateID", "setResizable"]
}
